<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.mapper.UmsUserMapper">
  <resultMap id="BaseResultMap" type="com.github.entity.UmsUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="is_locked" jdbcType="INTEGER" property="isLocked" />
    <result column="is_admin" jdbcType="INTEGER" property="isAdmin" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, `password`, nickname, is_locked, is_admin, is_delete, create_time,
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_ums_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_ums_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.github.entity.UmsUser" useGeneratedKeys="true">
    insert into t_ums_user (username, `password`, nickname,
      is_locked, is_admin, is_delete,
      create_time, update_time)
    values (#{username,jdbcType=VARCHAR}, MD5(#{password,jdbcType=VARCHAR}), #{nickname,jdbcType=VARCHAR},
      #{isLocked,jdbcType=INTEGER}, #{isAdmin,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.github.entity.UmsUser" useGeneratedKeys="true">
    insert into t_ums_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="isLocked != null">
        is_locked,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        MD5(#{password,jdbcType=VARCHAR}),
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="isLocked != null">
        #{isLocked,jdbcType=INTEGER},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.entity.UmsUser">
    update t_ums_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = MD5(#{password,jdbcType=VARCHAR}),
      </if>
      <if test="nickname != null">
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="isLocked != null">
        is_locked = #{isLocked,jdbcType=INTEGER},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.entity.UmsUser">
    update t_ums_user
    set username = #{username,jdbcType=VARCHAR},
      `password` = MD5(#{password,jdbcType=VARCHAR}),
      nickname = #{nickname,jdbcType=VARCHAR},
      is_locked = #{isLocked,jdbcType=INTEGER},
      is_admin = #{isAdmin,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectBySelective" parameterType="com.github.entity.UmsUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_ums_user
    where 1 = 1
    <if test="id != null">
      and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="username != null and username != ''">
      and username like concat('%',#{username,jdbcType=VARCHAR},'%')
    </if>
    <if test="nickname != null and nickname != ''">
      and nickname like concat('%',#{nickname,jdbcType=VARCHAR},'%')
    </if>
    <if test="isLocked != null">
      and is_locked = #{isLocked,jdbcType=INTEGER}
    </if>
    <if test="isAdmin != null">
      and is_admin = #{isAdmin,jdbcType=INTEGER}
    </if>
    <if test="isDelete != null">
      and is_delete = #{isDelete,jdbcType=INTEGER}
    </if>
    <if test="createTime != null">
      and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null">
      and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
  </select>
</mapper>